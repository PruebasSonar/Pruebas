@using PIPMUNI_ARG.Models.Domain;
@model AdditionAttachment
@{
    ViewData["Title"] = "Crear Anexo Redeterminación";
    ViewBag.WorkingInContract = true;
    ViewData["isBasicView"] = true;
}

@await Html.PartialAsync("/Views/Shared/JaosLib/_ResultMessages.cshtml",ViewData)

<form id="FormAdditionAttachment" asp-action="Create" class="mt-2" asp-route-returnUrl="@ViewBag.returnUrl" asp-route-bufferedUrl="@ViewBag.bufferedUrl"enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="row">
        <div class="form-group mb-3" id="divAddition">
            <label asp-for="Addition" class="control-label" title="La redeterminación a la que se anexa el documento."></label>
            @if (((int?)@ViewBag.additionId) != null && ((int?)@ViewBag.additionId).Value > 0)
            {
                @Html.HiddenFor(m => m.Addition)
                <select disabled asp-for="Addition" name="Addition" class="form-select" asp-items="ViewBag.listAddition" id="Addition"></select>
            }
            else
            {
                <select asp-for="Addition" name="Addition" class="form-select" asp-items="ViewBag.listAddition" id="Addition"></select>
            }
            <span asp-validation-for="Addition" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="form-group mb-3 col-sm-6" id="divTitle">
            <label asp-for="Title" class="control-label" title="Título que identifica el documento anexo."></label>
            <input asp-for="Title" type="text" class="form-control">
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>
        <div class="form-group mb-3 col-sm-6" id="divFileName">
            <label asp-for="FileName" class="control-label" title="Archivo que contiene el documento anexo."></label>
            <input hidden id="FileNameInput" asp-for="FileNameInput" type="file" />
            <div class="input-group mb-3">
                <label id="FileNameButton" asp-for="FileNameInput" class="btn btn-outline-secondary" type="button"><i class="bi bi-upload"></i>&nbsp; Cargar Archivo</label>
                <input readonly id="FileName" asp-for="FileName" type="text" class="form-control" placeholder="(sin archivo seleccionado)">
            </div>
            <span asp-validation-for="FileName" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="form-group mb-3 col-sm-4" id="divDateAttached">
            <label asp-for="DateAttached" class="control-label" title="Fecha en la que se carga el documento anexo."></label>
            <input asp-for="DateAttached" type="date" class="form-control" readonly>
            <span asp-validation-for="DateAttached" class="text-danger"></span>
        </div>
    </div>

    @await Html.PartialAsync("/Views/Shared/JaosLib/_ResultMessages.cshtml",ViewData)

    <div class="form-group mt-5">
        @{
            <!-- return button -->
            if (!string.IsNullOrEmpty(ViewBag.returnUrl))
            {
                string returnlink = @ViewBag.returnUrl;
                if (!string.IsNullOrEmpty(ViewBag.bufferedUrl))
                {
                    if (!returnlink.Contains("returnUrl"))
                    {
                        string separator = (returnlink.Contains('?')) ? "&" : "?";
                        returnlink += string.Format("{0}returnUrl={1}", separator, ViewBag.bufferedUrl);
                    }
                }
                <a href=@returnlink formnovalidate class="btn btn-basic"><i class="bi-arrow-90deg-left"></i>&nbsp; Regresar</a>
            }
            else
            {
                <a id="goBack" href="javascript:void(0);" formnovalidate class="btn btn-basic"><i class="bi-arrow-90deg-left"></i>&nbsp; Regresar</a>
            }
        }
        <button type="submit" class="btn btn-primary"><i class="bi bi-check-lg"></i> Guardar</button>
    </div>

</form>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<!-- Attachments Manager -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // FileName: set elements in variables;
        const fileNameInput = document.getElementById('FileNameInput');
        const fileNameName = document.getElementById('FileName');
        const fileNameButton = document.getElementById('FileNameButton');


        // FileName: display file name when selected;
        if (fileNameInput != null)
            fileNameInput.addEventListener('change', function () {
                fileNameName.value = fileNameInput.files[0].name;
                fileNameButton.textContent = (fileNameName.textContent != null) ? "Cambiar Archivo" :  "Cargar Archivo";
            });

    });
</script>
