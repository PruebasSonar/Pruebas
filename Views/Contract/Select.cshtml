@using PIPMUNI_ARG.Services.basic;
@model IEnumerable<PIPMUNI_ARG.Models.Domain.Contract>
@{
    ViewData["Title"] = "Seleccionar Obra";
}

@if (Model != null && Model.Any())
{
    <form asp-action="Select" asp-controller="Contract" method="get" asp-route-returnUrl="@ViewBag.returnUrl" asp-route-bufferedUrl="@ViewBag.bufferedUrl">

        <!-- Search -->
        <div class="row mb-4">
            @if ((Model?.Count() > ProjectGlobals.maxRowsBeforeSearch) || (!string.IsNullOrEmpty(@ViewBag.searchText)))
            {
                <div class="col-xl-3 col-lg-2 col-md-1">
                </div>
                <div class="col-xl-9 col-lg-10 col-md-11 col-sm-12">
                    <div class="input-group">
                        <input name="searchText" type="search" value="@ViewBag.searchText" class="form-control" />
                       <button type="submit" class="btn btn-outline-secondary"><i class="bi-search"></i><span class="screenOnly">&nbsp; Buscar</span></button>
                    </div>
                </div>
            }
        </div>

        @await Html.PartialAsync("/Views/Shared/JaosLib/_ResultMessages.cshtml",ViewData)

        <!-- select table -->
        <table class="table select-table">
            <thead>
                <tr>
                    <th>
                       <a href=@Url.Action("Select", "Contract", new { sortOrder = @ViewBag.codeSort})>
                            @Html.DisplayNameFor(model => model.Code) <i class=@ViewBag.codeIcon></i>
                        </a>
                    </th>
                    <th>
                       <a href=@Url.Action("Select", "Contract", new { sortOrder = @ViewBag.nameSort})>
                            @Html.DisplayNameFor(model => model.Name) <i class=@ViewBag.nameIcon></i>
                        </a>
                    </th>
                    <th>
                       <a href=@Url.Action("Select", "Contract", new { sortOrder = @ViewBag.stageSort})>
                            @Html.DisplayNameFor(model => model.Stage) <i class=@ViewBag.stageIcon></i>
                        </a>
                    </th>
                    <th>
                       <a href=@Url.Action("Select", "Contract", new { sortOrder = @ViewBag.officeSort})>
                            @Html.DisplayNameFor(model => model.Office) <i class=@ViewBag.officeIcon></i>
                        </a>
                    </th>
                    <th>
                       <a href=@Url.Action("Select", "Contract", new { sortOrder = @ViewBag.contractorSort})>
                            @Html.DisplayNameFor(model => model.Contractor) <i class=@ViewBag.contractorIcon></i>
                        </a>
                    </th>
                </tr>
            </thead>
        <tbody>
            @foreach (var contract in Model!)
            {
                <tr>
                    <td class="sel-row">
                        <a  asp-area=@ParentContractService.defaultArea asp-controller=@ParentContractService.defaultController asp-action=@ParentContractService.defaultAction asp-route-id="@contract.Id">
                            @Html.DisplayFor(modelItem => contract.Code)
                        </a>
                    </td>
                    <td class="sel-row">
                        <a  asp-area=@ParentContractService.defaultArea asp-controller=@ParentContractService.defaultController asp-action=@ParentContractService.defaultAction asp-route-id="@contract.Id">
                            @Html.DisplayFor(modelItem => contract.Name)
                        </a>
                    </td>
                    <td class="sel-row">
                        <a  asp-area=@ParentContractService.defaultArea asp-controller=@ParentContractService.defaultController asp-action=@ParentContractService.defaultAction asp-route-id="@contract.Id">
                            @if (contract.Stage_info != null) @Html.DisplayFor(modelItem => contract.Stage_info.Name)
                        </a>
                    </td>
                    <td class="sel-row">
                        <a  asp-area=@ParentContractService.defaultArea asp-controller=@ParentContractService.defaultController asp-action=@ParentContractService.defaultAction asp-route-id="@contract.Id">
                            @if (contract.Office_info != null) @Html.DisplayFor(modelItem => contract.Office_info.Name)
                        </a>
                    </td>
                    <td class="sel-row">
                        <a  asp-area=@ParentContractService.defaultArea asp-controller=@ParentContractService.defaultController asp-action=@ParentContractService.defaultAction asp-route-id="@contract.Id">
                            @if (contract.Contractor_info != null) @Html.DisplayFor(modelItem => contract.Contractor_info.Name)
                        </a>
                    </td>
                </tr>
            }
        </tbody>
        </table>

    </form>
}
else
{
    <h3 class="alert">No hay Obras disponibles.</h3>
}
@{
    <!-- return button -->
    if (!string.IsNullOrEmpty(ViewBag.returnUrl))
    {
        string returnlink = @ViewBag.returnUrl;
        if (!string.IsNullOrEmpty(ViewBag.bufferedUrl))
        {
            if (!returnlink.Contains("returnUrl"))
            {
                string separator = (returnlink.Contains('?')) ? "&" : "?";
                returnlink += string.Format("{0}returnUrl={1}", separator, ViewBag.bufferedUrl);
            }
        }
        <a href=@returnlink formnovalidate class="btn btn-basic"><i class="bi-arrow-90deg-left"></i>&nbsp; Regresar</a>
    }
}

