@using PIPMUNI_ARG.Models.Domain;
@model IEnumerable<PIPMUNI_ARG.Models.Domain.Project>?
@{
    ViewData["Title"] = "Proyectos";
}



<form asp-action="Index" asp-controller="Project" method="get" asp-route-returnUrl="@ViewBag.returnUrl" asp-route-bufferedUrl="@ViewBag.bufferedUrl" >

    <!-- Search -->
    <div class="row mb-4">
        @if ((Model?.Count() > ProjectGlobals.maxRowsBeforeSearch) || (!string.IsNullOrEmpty(@ViewBag.searchText)))
        {
            <div class="col-xl-3 col-lg-2 col-md-1">
            </div>
            <div class="col-xl-9 col-lg-10 col-md-11 col-sm-12">
                <div class="input-group">
                    <input name="searchText" type="search" value="@ViewBag.searchText" class="form-control" />
                   <button type="submit" class="btn btn-outline-secondary"><i class="bi-search"></i><span class="screenOnly">&nbsp; Buscar</span></button>
                </div>
            </div>
        }
    </div>

    <a asp-area="" asp-controller="Project"  asp-action="Create" class="btn btn-clear float-end" asp-route-bufferedUrl=@ViewBag.returnUrl><i class="bi-plus"></i> Crear  Proyecto</a>

    <!-- select table -->
    <table class="table select-table" summary="Select Proyecto table">
        <thead>
            <tr>
                <th>
                    <a href=@Url.Action("Index", "Project", new { sortOrder = @ViewBag.nameSort})>
                        @Html.DisplayNameForInnerType((Project s) => s.Name) <i class=@ViewBag.nameIcon></i>
                    </a>
                </th>
                <th>
                    <a href=@Url.Action("Index", "Project", new { sortOrder = @ViewBag.codeSort})>
                        @Html.DisplayNameForInnerType((Project s) => s.Code) <i class=@ViewBag.codeIcon></i>
                    </a>
                </th>
                <th>
                    <a href=@Url.Action("Index", "Project", new { sortOrder = @ViewBag.sectorSort})>
                        @Html.DisplayNameForInnerType((Project s) => s.Sector) <i class=@ViewBag.sectorIcon></i>
                    </a>
                </th>
                <th>
                    <a href=@Url.Action("Index", "Project", new { sortOrder = @ViewBag.stageSort})>
                        @Html.DisplayNameForInnerType((Project s) => s.Stage) <i class=@ViewBag.stageIcon></i>
                    </a>
                </th>
                <th>
                    <a href=@Url.Action("Index", "Project", new { sortOrder = @ViewBag.officeSort})>
                        @Html.DisplayNameForInnerType((Project s) => s.Office) <i class=@ViewBag.officeIcon></i>
                    </a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model?.Count() > 0)
            {
                @foreach (var project in Model)
                {
                    <tr>
                        <td class="sel-row">
                            <a asp-action="Edit" asp-route-id="@project.Id" asp-route-bufferedUrl=@ViewBag.returnUrl>
                                @Html.DisplayFor(modelItem => project.Name)
                            </a>
                        </td>
                        <td class="sel-row">
                            <a asp-action="Edit" asp-route-id="@project.Id" asp-route-bufferedUrl=@ViewBag.returnUrl>
                                @Html.DisplayFor(modelItem => project.Code)
                            </a>
                        </td>
                        <td class="sel-row">
                            <a asp-action="Edit" asp-route-id="@project.Id" asp-route-bufferedUrl=@ViewBag.returnUrl>
                                @if (project.Sector_info != null) @Html.DisplayFor(modelItem => project.Sector_info.Name)
                            </a>
                        </td>
                        <td class="sel-row">
                            <a asp-action="Edit" asp-route-id="@project.Id" asp-route-bufferedUrl=@ViewBag.returnUrl>
                                @if (project.Stage_info != null) @Html.DisplayFor(modelItem => project.Stage_info.Name)
                            </a>
                        </td>
                        <td class="sel-row">
                            <a asp-action="Edit" asp-route-id="@project.Id" asp-route-bufferedUrl=@ViewBag.returnUrl>
                                @if (project.Office_info != null) @Html.DisplayFor(modelItem => project.Office_info.Name)
                            </a>
                        </td>
                        <td class="sel-row">
                            <a asp-action="Edit" asp-route-id="@project.Id" asp-route-bufferedUrl=@ViewBag.returnUrl class="btn nav-link">
                                <i class="bi-pencil"></i>
                            </a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

</form>
@{
    <!-- return button -->
    if (!string.IsNullOrEmpty(ViewBag.returnUrl))
    {
        string returnlink = @ViewBag.returnUrl;
        if (!string.IsNullOrEmpty(ViewBag.bufferedUrl))
        {
            if (!returnlink.Contains("returnUrl"))
            {
                string separator = (returnlink.Contains('?')) ? "&" : "?";
                returnlink += string.Format("{0}returnUrl={1}", separator, ViewBag.bufferedUrl);
            }
        }
        <a href=@returnlink formnovalidate class="btn btn-basic"><i class="bi-arrow-90deg-left"></i>&nbsp; Regresar</a>
    }
}

@await Html.PartialAsync("/Views/Shared/JaosLib/_ResultMessages.cshtml",ViewData)
